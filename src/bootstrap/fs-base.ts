// @ts-nocheck
import { fs } from './switch.js';

// Re-export these as BINDINGS, so this module's export updates when the corresponding export in switch.js changes. 
// This is different from doing 
// 		import { F_OK as F_OK } from './switch.js';
// 		export let F_OK = _F_OK;
// which would re-export the VALUE. 
export { F_OK, R_OK , W_OK, X_OK, constants, Stats, Dir, Dirent, ReadStream, WriteStream } from './switch.js';

export default fs;

// Since promises is itself a proxy, no need to re-export it as a binding.
export const promises = fs.promises;

export const appendFile = (...args) => fs.appendFile.apply(fs, args);
export const appendFileSync = (...args) => fs.appendFileSync.apply(fs, args);
export const access = (...args) => fs.access.apply(fs, args);
export const accessSync = (...args) => fs.accessSync.apply(fs, args);
export const chown = (...args) => fs.chown.apply(fs, args);
export const chownSync = (...args) => fs.chownSync.apply(fs, args);
export const chmod = (...args) => fs.chmod.apply(fs, args);
export const chmodSync = (...args) => fs.chmodSync.apply(fs, args);
export const close = (...args) => fs.close.apply(fs, args);
export const closeSync = (...args) => fs.closeSync.apply(fs, args);
export const copyFile = (...args) => fs.copyFile.apply(fs, args);
export const copyFileSync = (...args) => fs.copyFileSync.apply(fs, args);
export const cp = (...args) => fs.cp.apply(fs, args);
export const cpSync = (...args) => fs.cpSync.apply(fs, args);
export const createReadStream = (...args) => fs.createReadStream.apply(fs, args);
export const createWriteStream = (...args) => fs.createWriteStream.apply(fs, args);
export const exists = (...args) => fs.exists.apply(fs, args);
export const existsSync = (...args) => fs.existsSync.apply(fs, args);
export const fchown = (...args) => fs.fchown.apply(fs, args);
export const fchownSync = (...args) => fs.fchownSync.apply(fs, args);
export const fchmod = (...args) => fs.fchmod.apply(fs, args);
export const fchmodSync = (...args) => fs.fchmodSync.apply(fs, args);
export const fdatasync = (...args) => fs.fdatasync.apply(fs, args);
export const fdatasyncSync = (...args) => fs.fdatasyncSync.apply(fs, args);
export const fstat = (...args) => fs.fstat.apply(fs, args);
export const fstatSync = (...args) => fs.fstatSync.apply(fs, args);
export const fsync = (...args) => fs.fsync.apply(fs, args);
export const fsyncSync = (...args) => fs.fsyncSync.apply(fs, args);
export const ftruncate = (...args) => fs.ftruncate.apply(fs, args);
export const ftruncateSync = (...args) => fs.ftruncateSync.apply(fs, args);
export const futimes = (...args) => fs.futimes.apply(fs, args);
export const futimesSync = (...args) => fs.futimesSync.apply(fs, args);
export const glob = (...args) => fs.glob.apply(fs, args);
export const globSync = (...args) => fs.globSync.apply(fs, args);
export const lchown = (...args) => fs.lchown.apply(fs, args);
export const lchownSync = (...args) => fs.lchownSync.apply(fs, args);
export const lchmod = (...args) => fs.lchmod.apply(fs, args);
export const lchmodSync = (...args) => fs.lchmodSync.apply(fs, args);
export const link = (...args) => fs.link.apply(fs, args);
export const linkSync = (...args) => fs.linkSync.apply(fs, args);
export const lstat = (...args) => fs.lstat.apply(fs, args);
export const lstatSync = (...args) => fs.lstatSync.apply(fs, args);
export const lutimes = (...args) => fs.lutimes.apply(fs, args);
export const lutimesSync = (...args) => fs.lutimesSync.apply(fs, args);
export const mkdir = (...args) => fs.mkdir.apply(fs, args);
export const mkdirSync = (...args) => fs.mkdirSync.apply(fs, args);
export const mkdtemp = (...args) => fs.mkdtemp.apply(fs, args);
export const mkdtempSync = (...args) => fs.mkdtempSync.apply(fs, args);
export const open = (...args) => fs.open.apply(fs, args);
export const openSync = (...args) => fs.openSync.apply(fs, args);
export const openAsBlob = (...args) => fs.openAsBlob.apply(fs, args);
export const readdir = (...args) => fs.readdir.apply(fs, args);
export const readdirSync = (...args) => fs.readdirSync.apply(fs, args);
export const read = (...args) => fs.read.apply(fs, args);
export const readSync = (...args) => fs.readSync.apply(fs, args);
export const readv = (...args) => fs.readv.apply(fs, args);
export const readvSync = (...args) => fs.readvSync.apply(fs, args);
export const readFile = (...args) => fs.readFile.apply(fs, args);
export const readFileSync = (...args) => fs.readFileSync.apply(fs, args);
export const readlink = (...args) => fs.readlink.apply(fs, args);
export const readlinkSync = (...args) => fs.readlinkSync.apply(fs, args);
export const realpath = (...args) => fs.realpath.apply(fs, args);
export const realpathSync = (...args) => fs.realpathSync.apply(fs, args);
export const rename = (...args) => fs.rename.apply(fs, args);
export const renameSync = (...args) => fs.renameSync.apply(fs, args);
export const rm = (...args) => fs.rm.apply(fs, args);
export const rmSync = (...args) => fs.rmSync.apply(fs, args);
export const rmdir = (...args) => fs.rmdir.apply(fs, args);
export const rmdirSync = (...args) => fs.rmdirSync.apply(fs, args);
export const stat = (...args) => fs.stat.apply(fs, args);
export const statfs = (...args) => fs.statfs.apply(fs, args);
export const statSync = (...args) => fs.statSync.apply(fs, args);
export const statfsSync = (...args) => fs.statfsSync.apply(fs, args);
export const symlink = (...args) => fs.symlink.apply(fs, args);
export const symlinkSync = (...args) => fs.symlinkSync.apply(fs, args);
export const truncate = (...args) => fs.truncate.apply(fs, args);
export const truncateSync = (...args) => fs.truncateSync.apply(fs, args);
export const unwatchFile = (...args) => fs.unwatchFile.apply(fs, args);
export const unlink = (...args) => fs.unlink.apply(fs, args);
export const unlinkSync = (...args) => fs.unlinkSync.apply(fs, args);
export const utimes = (...args) => fs.utimes.apply(fs, args);
export const utimesSync = (...args) => fs.utimesSync.apply(fs, args);
export const watch = (...args) => fs.watch.apply(fs, args);
export const watchFile = (...args) => fs.watchFile.apply(fs, args);
export const writeFile = (...args) => fs.writeFile.apply(fs, args);
export const writeFileSync = (...args) => fs.writeFileSync.apply(fs, args);
export const write = (...args) => fs.write.apply(fs, args);
export const writeSync = (...args) => fs.writeSync.apply(fs, args);
export const writev = (...args) => fs.writev.apply(fs, args);
export const writevSync = (...args) => fs.writevSync.apply(fs, args);
export const _toUnixTimestamp = (...args) => fs._toUnixTimestamp.apply(fs, args);
export const opendir = (...args) => fs.opendir.apply(fs, args);
export const opendirSync = (...args) => fs.opendirSync.apply(fs, args);